>>>>>CM:GREEN
Annex F (informative) Technically Significant Corrections and Clarifications in the 5.1 Edition
>>>>>CM:GREEN
===============================================================================================

>>>>>CM:GREEN
7.8.4: CV definitions added for DoubleStringCharacter :: LineContinuation and SingleStringCharacter
>>>>>CM:GREEN
:: LineContinuation .

>>>>>CM:GREEN
10.2.1.1.3: The argument S is not ignored. It controls whether an exception is thrown when
>>>>>CM:GREEN
attempting to set an immutable binding.

>>>>>CM:GREEN
10.2.1.2.2: In algorithm step 5, true is passed as the last argument to [[DefineOwnProperty]].

>>>>>CM:GREEN
10.5: Former algorithm step 5.e is now 5.f and a new step 5.e was added to restore compatibility
>>>>>CM:GREEN
with 3rd Edition when redefining global functions.

>>>>>CM:GREEN
11.5.3: In the final bullet item, use of IEEE 754 round-to-nearest mode is specified.

>>>>>CM:GREEN
12.6.3: Missing ToBoolean restored in step 3.a.ii of both algorithms.

>>>>>CM:GREEN
12.6.4: Additional final sentences in each of the last two paragraphs clarify certain property
>>>>>CM:GREEN
enumeration requirements.

>>>>>CM:GREEN
12.7, 12.8, 12.9: BNF modified to clarify that a continue or break statement without an Identifier
>>>>>CM:GREEN
or a return statement without an Expression may have a LineTerminator before the semi-colon.

>>>>>CM:GREEN
12.14: Step 3 of algorithm 1 and step 2.a of algorithm 3 are corrected such that the value field of
>>>>>CM:GREEN
B is passed as a parameter rather than B itself.

>>>>>CM:GREEN
15.1.2.2: In step 2 of algorithm, clarify that S may be the empty string.

>>>>>CM:GREEN
15.1.2.3: In step 2 of algorithm clarify that trimmedString may be the empty string.

>>>>>CM:GREEN
15.1.3: Added notes clarifying that ECMAScript�s URI syntax is based upon RFC 2396 and not the newer
>>>>>CM:GREEN
RFC 3986. In the algorithm for Decode, a step was removed that immediately preceded the current step
>>>>>CM:GREEN
4.d.vii.10.a because it tested for a condition that cannot occur.

>>>>>CM:GREEN
15.2.3.7: Corrected use of variable P in steps 5 and 6 of algorithm.

>>>>>CM:GREEN
15.2.4.2: Edition 5 handling of undefined and null as this value caused existing code to fail.
>>>>>CM:GREEN
Specification modified to maintain compatibility with such code. New steps 1 and 2 added to the
>>>>>CM:GREEN
algorithm.

>>>>>CM:GREEN
15.3.4.3: Steps 5 and 7 of Edition 5 algorithm have been deleted because they imposed requirements
>>>>>CM:GREEN
upon the argArray argument that are inconsistent with other uses of generic array-like objects.

>>>>>CM:GREEN
15.4.4.12: In step 9.a, incorrect reference to relativeStart was replaced with a reference to
>>>>>CM:GREEN
actualStart.

>>>>>CM:GREEN
15.4.4.15: Clarified that the default value for fromIndex is the length minus 1 of the array.

>>>>>CM:GREEN
15.4.4.18: In step 9 of the algorithm, undefined is now the specified return value.

>>>>>CM:GREEN
15.4.4.22: In step 9.c.ii the first argument to the [[Call]] internal method has been changed to
>>>>>CM:GREEN
undefined for consistency with the definition of Array.prototype.reduce.

>>>>>CM:GREEN
15.4.5.1: In Algorithm steps 3.l.ii and 3.l.iii the variable name was inverted resulting in an
>>>>>CM:GREEN
incorrectly inverted test.

>>>>>CM:GREEN
15.5.4.9: Normative requirement concerning canonically equivalent strings deleted from paragraph
>>>>>CM:GREEN
following algorithm because it is listed as a recommendation in NOTE 2.

>>>>>CM:GREEN
15.5.4.14: In split algorithm step 11.a and 13.a, the positional order of the arguments to
>>>>>CM:GREEN
SplitMatch was corrected to match the actual parameter signature of SplitMatch. In step
>>>>>CM:GREEN
13.a.iii.7.d, lengthA replaces A.length.

>>>>>CM:GREEN
15.5.5.2: In first paragraph, removed the implication that the individual character property access
>>>>>CM:GREEN
had �array index� semantics. Modified algorithm steps 3 and 5 such that they do not enforce �array
>>>>>CM:GREEN
index� requirement.

>>>>>CM:GREEN
15.9.1.15: Specified legal value ranges for fields that lacked them. Eliminated �time-only� formats.
>>>>>CM:GREEN
Specified default values for all optional fields.

>>>>>CM:GREEN
15.10.2.2: The step numbers of the algorithm for the internal closure produced by step 2 were
>>>>>CM:GREEN
incorrectly numbered in a manner that implied that they were steps of the outer algorithm.

>>>>>CM:GREEN
15.10.2.6: In the abstract operation IsWordChar the first character in the list in step 3 is �a�
>>>>>CM:GREEN
rather than �A�.

>>>>>CM:GREEN
15.10.2.8: In the algorithm for the closure returned by the abstract operation CharacterSetMatcher,
>>>>>CM:GREEN
the variable defined by step 3 and passed as an argument in step 4 was renamed to ch in order to
>>>>>CM:GREEN
avoid a name conflict with a formal parameter of the closure.

>>>>>CM:GREEN
15.10.6.2: Step 9.e was deleted because It performed an extra increment of i.

>>>>>CM:GREEN
15.11.1.1: Removed requirement that the message own property is set to the empty String when the
>>>>>CM:GREEN
message argument is undefined.

>>>>>CM:GREEN
15.11.1.2: Removed requirement that the message own property is set to the empty String when the
>>>>>CM:GREEN
message argument is undefined.

>>>>>CM:GREEN
15.11.4.4: Steps 6-10 modified/added to correctly deal with missing or empty message property value.

>>>>>CM:GREEN
15.11.1.2: Removed requirement that the message own property is set to the empty String when the
>>>>>CM:GREEN
message argument is undefined.

>>>>>CM:GREEN
15.12.3: In step 10.b.iii of the JA internal operation, the last element of the concatenation is
>>>>>CM:GREEN
�]�.

>>>>>CM:GREEN
B.2.1: Added to NOTE that the encoding is based upon RFC 1738 rather than the newer RFC 3986.

>>>>>CM:GREEN
Annex C: An item was added corresponding to 7.6.12 regarding FutureReservedWords in strict mode.
